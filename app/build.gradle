apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt' //needed for source code generation (IOC)

android {
    compileSdkVersion 24
    buildToolsVersion "23.0.3"
    // To continue using the Apache HTTP APIs,
    // we have first declare the following compile-time dependency in the build.gradle file:
    // useLibrary 'org.apache.http.legacy'

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    defaultConfig {
        applicationId "hesso.mas.stdhb"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"

        // Enabling multidex support. (chf: en construisant l'apk)
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions
            {
                incremental false
                javaMaxHeapSize "2048M"
                preDexLibraries = false
            }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    //sourceCompatibility = '1.7'
    //targetCompatibility = '1.7'
}
dependencies {
    // We also need to configure the testing dependencies for our project to use the standard APIs provided
    // by the JUnit 4 framework. If the test needs to interact with Android dependencies, include the Mockito
    // library to simplify your local unit tests. To learn more about using mock objects in your local unit tests,
    // see Mocking Android dependencies.

    // Set up the testing environment
    testCompile 'junit:junit:4.12'
    // Mockito Framework
    //testCompile 'org.mockito:mockito-core:1.10.19'

    compile 'com.android.support:appcompat-v7:24.1.1'
    compile 'com.android.support:design:24.1.1'
    compile 'com.android.support:support-v4:24.1.1'
    compile 'com.google.android.gms:play-services:9.2.1'

    // Libraries used for the communication between the Client and the Server
    compile fileTree(dir: 'libs/Androjena', include: ['*.jar'])
    //compile fileTree(dir: 'libs/Rdf4j/1.0', include: ['*.jar'])

    // Set up the libraries used for the Rest Client
    //compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'

    // Set up the powerful image downloading and caching library for Android
    compile 'com.squareup.picasso:picasso:2.5.2'

    // Set up the glide image downloading and caching library for Android
    compile 'com.github.bumptech.glide:glide:3.7.0'

    // Ioc Framework for Android
    compile 'com.squareup.dagger:dagger:1.2.+'
    provided 'com.squareup.dagger:dagger-compiler:1.2.+' //need for source code generation
    //provided 'org.glassfish:javax.annotation:10.0-b28'

    // Set up the apk environment
    compile 'com.android.support:multidex:1.0.1'
}
